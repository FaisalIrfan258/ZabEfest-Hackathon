{
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Create a new user account with the provided information",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "username", "email", "password", "confirmPassword"],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "username": {
                    "type": "string",
                    "example": "johndoe123"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "Password123"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "format": "password",
                    "example": "Password123"
                  },
                  "role": {
                    "type": "string",
                    "enum": ["user", "authority"],
                    "example": "user"
                  },
                  "location": {
                    "type": "string",
                    "description": "User's full address",
                    "example": "123 Main Street, Apartment 4B, Karachi, Pakistan"
                  },
                  "cnic": {
                    "type": "string",
                    "pattern": "^[0-9]{13}$",
                    "example": "1234567890123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User registered successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        },
                        "token": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or user already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register/admin": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new admin",
        "description": "Create a new admin account with the provided information",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password", "confirmPassword", "role"],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Admin User"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "admin@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "Password123"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "format": "password",
                    "example": "Password123"
                  },
                  "role": {
                    "type": "string",
                    "enum": ["admin", "authority"],
                    "example": "admin"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Admin registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Admin registered successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        },
                        "token": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or admin already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "description": "Authenticate a user with email, username, or CNIC and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "required": ["email", "password"],
                    "properties": {
                      "email": {
                        "type": "string",
                        "format": "email",
                        "example": "admin@example.com"
                      },
                      "password": {
                        "type": "string",
                        "format": "password",
                        "example": "Password123"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": ["username", "password"],
                    "properties": {
                      "username": {
                        "type": "string",
                        "example": "johndoe123"
                      },
                      "password": {
                        "type": "string",
                        "format": "password",
                        "example": "Password123"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": ["cnic", "password"],
                    "properties": {
                      "cnic": {
                        "type": "string",
                        "example": "1234567890123"
                      },
                      "password": {
                        "type": "string",
                        "format": "password",
                        "example": "Password123"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User logged in successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        },
                        "token": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get current user profile",
        "description": "Retrieve the profile of the currently authenticated user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Authentication"],
        "summary": "Update user profile",
        "description": "Update the profile of the currently authenticated user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Smith"
                  },
                  "location": {
                    "type": "string",
                    "description": "User's full address",
                    "example": "123 Main Street, Apartment 4B, Karachi, Pakistan"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Profile updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/forgot-password/admin": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Forgot password for admin users",
        "description": "Request password reset for admin users using email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "admin@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Password reset email sent"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/forgot-password/user": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Forgot password for regular users",
        "description": "Request password reset for regular users using CNIC",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["cnic"],
                "properties": {
                  "cnic": {
                    "type": "string",
                    "example": "1234567890123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Password reset email sent"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset-password/{token}": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Reset password",
        "description": "Reset password using token received via email",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Password reset token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["password", "confirmPassword"],
                "properties": {
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "newPassword123"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "format": "password",
                    "example": "newPassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Password updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid token or passwords don't match",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d21b4667d0d8992e610c85"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "username": {
            "type": "string",
            "example": "johndoe123"
          },
          "email": {
            "type": "string",
            "example": "john@example.com"
          },
          "cnic": {
            "type": "string",
            "example": "1234567890123"
          },
          "role": {
            "type": "string",
            "enum": ["user", "admin", "authority"],
            "example": "user"
          },
          "profilePicture": {
            "type": "string",
            "example": "https://example.com/profile.jpg"
          },
          "location": {
            "type": "string",
            "description": "User's full address",
            "example": "123 Main Street, Apartment 4B, Karachi, Pakistan"
          },
          "points": {
            "type": "number",
            "example": 50
          },
          "badges": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["reporter", "validator", "solver", "leader"]
            },
            "example": ["reporter", "validator"]
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "lastActive": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-01T12:00:00Z"
          },
          "fcmToken": {
            "type": "string",
            "example": "fcm-token-123456"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-01T00:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-01T00:00:00Z"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Error message"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "example": "email"
                },
                "message": {
                  "type": "string",
                  "example": "Email is already in use"
                }
              }
            }
          }
        }
      },
      "AdminForgotPasswordRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "admin@example.com"
          }
        }
      },
      "UserForgotPasswordRequest": {
        "type": "object",
        "required": ["cnic"],
        "properties": {
          "cnic": {
            "type": "string",
            "pattern": "^[0-9]{13}$",
            "example": "1234567890123"
          }
        }
      },
      "ResetPasswordRequest": {
        "type": "object",
        "required": ["password", "confirmPassword"],
        "properties": {
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 6,
            "example": "newPassword123"
          },
          "confirmPassword": {
            "type": "string",
            "format": "password",
            "example": "newPassword123"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
} 